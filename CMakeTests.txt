macro(add_ias_test ias_file expect)
	string(REGEX MATCH "[^/\\]*$" test_name ${ias_file})
	add_test(
		"${test_name}"
		"${EXECUTABLE_OUTPUT_PATH}/ias" -p:disable ${ias_file}
	)
	set_tests_properties(
		"${test_name}"
		PROPERTIES PASS_REGULAR_EXPRESSION ${expect}
	)
endmacro()

macro(add_ink_test ink_file expect)
	string(REGEX MATCH "[^/\\]*$" test_name ${ink_file})
	add_test(
		"${test_name}"
		"${EXECUTABLE_OUTPUT_PATH}/ilang" -p:disable ${ink_file}
	)
	set_tests_properties(
		"${test_name}"
		PROPERTIES PASS_REGULAR_EXPRESSION ${expect}
	)
endmacro()

enable_testing()

file(GLOB ias_test_list "test/*.ias")
file(GLOB ink_test_list "test/*.ink")

# string(REGEX REPLACE ".ias$" ".res" res_list ${test_list})

set(res_regx "[ \t]*->[ \t]*\"(.*)\"[ \t]*")

foreach(ias_file ${ias_test_list})
	file(STRINGS ${ias_file} ias_lines ENCODING UTF-8)

	set(result "")

	foreach(line ${ias_lines})
		# support two types of comment(// or /**/)
		# search for comments containing string "-> \"regex\""
		# ignore spaces and tabs
		if(line MATCHES "(//${res_regx}$)|(/\\*${res_regx}\\*/)")
			if(NOT result STREQUAL "")
				set(result "${result}\n")
			endif()
			set(result "${result}${CMAKE_MATCH_2}${CMAKE_MATCH_4}")
		endif()
	endforeach(line)

	if(result STREQUAL "")
		set(result "^$")
	else()
		set(result "^${result}\n$")
	endif()

	string(REPLACE "\n" " " output ${result})
	string(LENGTH "${output}" len)
	if(len GREATER 64)
		string(SUBSTRING "${output}" 0 64 output)
		set(output "${output}...")
	endif()
	message(STATUS "Find ias test ${ias_file}\npass result: ${output}\n")

	add_ias_test(${ias_file} "${result}")
endforeach(ias_file)

foreach(ink_file ${ink_test_list})
	file(STRINGS ${ink_file} ink_lines)

	set(result "")

	foreach(line ${ink_lines})
		# support two types of comment(// or /**/)
		# search for comments containing string "-> \"regex\""
		# ignore spaces and tabs
		if(line MATCHES "(//${res_regx}$)|(/\\*${res_regx}\\*/)")
			if(NOT result STREQUAL "")
				set(result "${result}\n")
			endif()
			set(result "${result}${CMAKE_MATCH_2}${CMAKE_MATCH_4}")
		endif()
	endforeach(line)

	if(result STREQUAL "")
		set(result "^$")
	else()
		set(result "^${result}\n$")
	endif()

	string(REPLACE "\n" " " output ${result})
	string(LENGTH "${output}" len)
	if(len GREATER 64)
		string(SUBSTRING "${output}" 0 64 output)
		set(output "${output}...")
	endif()
	message(STATUS "Find ink test ${ink_file}\npass result: ${output}\n")

	add_ink_test(${ink_file} "${result}")
endforeach(ink_file)

# add_ias_test("test/op1.ias" "hey (.|..|...)!\n")
